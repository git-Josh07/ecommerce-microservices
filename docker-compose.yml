version: '3.8'

services:
    # Database
    mysql:
      image: mysql:8.0
      container_name: ecommerce-mysql
      environment:
        MYSQL_ROOT_PASSWORD: root
        MYSQL_DATABASE: ecommerce
      ports:
        - "3306:3306"
      volumes:
        - mysql_data:/var/lib/mysql
        - ./docker-config/mysql-init:/docker-entrypoint-initdb.d
      networks:
        - ecommerce-network

    # Cache
    redis:
      image: redis:7-alpine
      container_name: ecommerce-redis
      ports:
        - "6379:6379"
      networks:
        - ecommerce-network

    # Message Broker
    zookeeper:
      image: confluentinc/cp-zookeeper:latest
      container_name: ecommerce-zookeeper
      environment:
        ZOOKEEPER_CLIENT_PORT: 2181
        ZOOKEEPER_TICK_TIME: 2000
      networks:
        - ecommerce-network

    kafka:
      image: confluentinc/cp-kafka:latest
      container_name: ecommerce-kafka
      depends_on:
        - zookeeper
      ports:
        - "9092:9092"
      environment:
        KAFKA_BROKER_ID: 1
        KAFKA_NODE_ID: 1
        KAFKA_PROCESS_ROLES: "broker,controller"
        KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
        KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092,CONTROLLER://:9093
        KAFKA_CONTROLLER_LISTENER_NAMES: "CONTROLLER"
        KAFKA_CONTROLLER_QUORUM_VOTERS: "1@kafka:9093"
        KAFKA_INTER_BROKER_LISTENER_NAME: "PLAINTEXT"
        KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
        CLUSTER_ID: "ecommerce-kafka-cluster-id"
      networks:
        - ecommerce-network

volumes:
    mysql_data:

networks:
    ecommerce-network:
      driver: bridge